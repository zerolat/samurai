name: Build and Release Samurai Kernel

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  KERNEL_VERSION: ${{vars.KERNEL_MAJOR}}.${{vars.KERNEL_MINOR}}.${{vars.KERNEL_PATCH}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          pwd
          echo $KERNEL_VERSION
          sudo apt update && sudo apt install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev fakeroot bc wget tar liblz4-tool lz4 xz-utils gh

      - name: Download kernel source
        run: |
          pwd
          wget -q "https://cdn.kernel.org/pub/linux/kernel/v${{vars.KERNEL_MAJOR}}.x/linux-$KERNEL_VERSION.tar.xz"
          tar -xvf linux-$KERNEL_VERSION.tar.xz
          mv linux-$KERNEL_VERSION linux

      - name: Apply RT patch
        working-directory: linux
        run: |
          pwd
          wget -q "https://cdn.kernel.org/pub/linux/kernel/projects/rt/${{vars.KERNEL_MAJOR}}.${{vars.KERNEL_MINOR}}/patch-$KERNEL_VERSION-rt${{vars.RT_VERSION}}.patch.xz"
          xz -d patch-$KERNEL_VERSION-rt${{vars.RT_VERSION}}.patch.xz
          patch -p1 < patch-$KERNEL_VERSION-rt${{vars.RT_VERSION}}.patch

      - name: Build samurai kernel
        working-directory: linux
        run: |
          pwd
          cp ../.config .
          fakeroot make -j$(nproc) deb-pkg LOCALVERSION=-samurai

      - name: Collect .deb files
        run: |
          pwd
          ls -la
          mv linux-image-*.deb samurai-$KERNEL_VERSION-amd64.deb
          mv linux-headers-*.deb samurai-headers-$KERNEL_VERSION-amd64.deb
          mv linux-libc-dev*.deb samurai-libc-dev-$KERNEL_VERSION-amd64.deb
          ls -la
          mkdir -p artifacts
          mv *.deb artifacts/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in artifacts/*.deb; do
            gh release upload ${{ github.ref_name }} "$file" --clobber
          done
